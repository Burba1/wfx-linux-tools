#!/bin/bash
# Copyright (c) 2018, Silicon Laboratories
# See license terms contained in COPYING file

# Start a demo in combo (concurrent AP/STA) mode for commissioning

set -e
. wfx_set_env
run_as_root

LIGHTTPD_CONF=$GITHUB_CONF_PATH/lighttpd.conf

# Access contraints:
# to enable toggling the LEDs from a web page:
#  * all groups must be allowed to write
#      web users are part of www-data and netdev
#      user 'pi' is part of netdev
#  * the netdev group must become the owner of
#      /sys/class/leds/ledX/trigger
#      and
#      /sys/class/leds/ledX/brightness
#  * since /sys/ is a virtual filesystem, this needs to be done on each reboot.
for led in {0..1}
do
    for item in trigger brightness
    do
        chmod g+rw    /sys/class/leds/led${led}/${item}
        chown :netdev /sys/class/leds/led${led}/${item}
    done
    set +e
    /home/pi/siliconlabs/wfx-linux-tools/demos/www/led_toggle.sh ${led}
    set -e
done

wfx_demo_stop

wfx_driver_reload -C

echo "Adding wlan1 for combo mode"
iw dev wlan0 interface add wlan1 type managed

#MAX_OUTPUT_POWER_QDBM=$1
#echo "{h:{e:0,a:${MAX_OUTPUT_POWER_QDBM},b:0,c:[{a:[1,E],b:[0,0,0,0,0,0]}],d:0}}" | sudo tee /sys/kernel/debug/ieee80211/phy0/wfx/send_pds

WLAN0_MAC=$(ip addr show wlan0 | grep link)
WLAN1_MAC=$(ip addr show wlan1 | grep link)

if [ "${WLAN1_MAC}" = "${WLAN0_MAC}" ]; then
    echo "wlan0 and wlan1 use the same MAC address, this will not work. You need to update your driver (use 'wfx_driver_install --version 2.2.1-public') and reload it (use 'wfx_driver_reload -C')"
    exit 1
fi

COUNTRY='US'
UNAME=$(uname -n)

AP_SSID="${UNAME}_AP"
AP_IF="wlan1"
AP_IP="192.168.5.1"
AP_CONF="/tmp/combo_hostapd.conf"

STA_SSID=""
STA_IF="wlan0"
STA_CONF="/tmp/combo_wpa_supplicant.conf"

ip addr flush dev "$AP_IF"
ip addr flush dev "$STA_IF"

systemctl disable avahi-daemon.service --now
systemctl disable avahi-daemon.socket --now
#systemctl mask avahi-daemon.service

# Fill AP_CONF file
cat << EOF > ${AP_CONF}
interface=${AP_IF}
ssid=${AP_SSID}
driver=nl80211
ctrl_interface=/var/run/hostapd
ctrl_interface_group=netdev
channel=1
country_code=${COUNTRY}
hw_mode=g
auth_algs=1
beacon_int=100
dtim_period=3
max_num_sta=8
rts_threshold=2347
fragm_threshold=2346
ieee80211n=1
wmm_enabled=0
logger_syslog=-1
logger_syslog_level=0
logger_stdout=-1
logger_stdout_level=2
EOF

# ---------------------------------------------------------
echo "Starting AP on ${AP_IF} with SSID ${AP_SSID}, IP ${AP_IP} with conf in ${AP_CONF}"
wfx_ap  --dhcp yes --conf ${AP_CONF}  --ip ${AP_IP}

# Enable IP forwarding
# (applies to both AP->STA and STA->AP traffic)
# (requires ip routing to be properly set)
echo 1 > /proc/sys/net/ipv4/ip_forward

# Fill STA_CONF file
cat << EOF > ${STA_CONF}
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=0
country=${COUNTRY}
network={
    key_mgmt=NONE
    priority=1
}
EOF

dhcpcd --release "${STA_IF}" 2>/dev/null
sleep 3

ip addr flush dev ${STA_IF}
dhcpcd --rebind ${STA_IF} 2>/dev/null

# ---------------------------------------------------------
echo "Starting STA on ${STA_IF} with conf in ${STA_CONF}"
wpa_supplicant -i "${STA_IF}" -B -s -t -T -c "${STA_CONF}" -P /var/run/wpa_supplicant-wlan1.pid

# ---------------------------------------------------------
echo "Starting lighttpd WEB server with conf in ${LIGHTTPD_CONF}"
lighttpd -f "$LIGHTTPD_CONF"

for led in {0..1}
do
    ./www/led_toggle.sh ${led}
done

echo "AP process"
ps -few | grep -E "hostapd" | grep '    1 '

echo "STA process"
ps -few | grep -E "wpa_supplicant" | grep '    1 '

echo "lighttpd process"
ps -few | grep -E "lighttpd" | grep  '    1 '

echo ""
echo "You can now connect on AP '${AP_SSID}', and access the web server at http://${AP_IP}"
