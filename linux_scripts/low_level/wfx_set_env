# This file is to be sourced by other wfx scripts

kernel=$(uname -r)

# Set SILABS_ROOT if not already done
: ${SILABS_ROOT:=/home/pi/siliconlabs}

# github clone directories
GITHUB_TOOLS_PATH="${SILABS_ROOT}/wfx_tools"
GITHUB_DRIVER_PATH="${SILABS_ROOT}/wfx_linux_driver"
GITHUB_FIRMWARE_PATH="${SILABS_ROOT}/wfx_firmware"
GIT_WFX_DIR="${GITHUB_FIRMWARE_PATH}"
GIT_PDS_DIR="${GITHUB_FIRMWARE_PATH}"

# locally generated files root
SILABS_OUT="${SILABS_ROOT}/out"
# local driver versions ( .ko files under <kernel>/<wfx_release> )
STORED_DRIVERS_PATH="${SILABS_OUT}/driver"
# local driver sources ( .c/.h/Makefile files under <wfx_release> )
STORED_DRIVERS_SOURCES_PATH="${SILABS_OUT}/driver/src"
# local firmware files ( generally empty )
STORED_FIRMWARES_PATH="${SILABS_OUT}/firmware"
# local pds files ( .pds.in and .pds files )
STORED_PDS_PATH="${SILABS_OUT}/pds"

# Other useful variables
FW_DMESG_GREP="Label."

# Current folder
ORIGIN_PWD=$(pwd)

# Check that the script is run by root
check_root()
{
    if [ $(id -u) != 0 ]; then
        echo "Please run this script as root (running 'sudo $0' should work)" >&2
        exit 1
    fi
}

check_no_root()
{
    if [ $(id -u) == 0 ]; then
        echo "Running this script as root is recommended" >&2
        exit 1
    fi
}

check_rpi()
{
    if ! grep -q 'NAME="Raspbian GNU/Linux"' /etc/os-release; then
        echo "You must run this script from a Raspberry" >&2
        exit 1
    fi
}

check_hat()
{
    if [ ! -d /proc/device-tree/hat ]; then
        if  grep -q '^dtparam=i2c_vc=on' /boot/config.txt; then
            echo "Cannot identify board, /proc/device-tree/hat/ does not exist. Empty eeprom?" >&2
        else
            echo "Cannot identify board, 'dtparam=i2c_vc=on' is not present in /boot/config.txt." >&2
        fi
        exit 1
    fi
}

# Kill process if need be and check that it is not restarted
kill_check ()
{
    if killall -q "$@"; then
	# At least one process was killed, checking for restart
	sleep 2
	if pidof "$@"; then
	    >&2 echo "At least one of the process ($1) is still running, exiting"
	    exit 1
	fi
    fi
}
