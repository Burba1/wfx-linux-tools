#!/bin/bash
# Copyright (c) 2018, Silicon Laboratories
# See license terms contained in COPYING file

set -euo pipefail
. wfx_set_env
run_as_root

USAGE="Usage: $(basename $0) OPTION

Start in access point mode

Options:
  --help               display this message
  --conf <file>        hostapd.conf file
  --ip <address>       set the IP (with /24 mask)
  --dhcp yes|no|ignore enable DHCP server (default is no)
  --forward <if>       enable traffic forwarding to interface
  --no-forward         disable all traffic forwarding

Example:
  - start an ap with address 192.168.1.1 on wlan and enable DHCP server (Wi-Fi configuration depends on hostapd.conf content):
      $(basename $0) --conf /home/pi/access_point/hostapd.conf --ip 192.168.1.1 --dhcp yes
"

CONF=""
SET_IP=""
DHCP="no"
FWD_IF=""
NO_FWD="false"
INTERFACE="wlan0"

[ $# -eq 0 ] && error
LONGOPTS="help,conf:,ip:,dhcp:,forward:,no-forward"
! PARSED=$(getopt --options="" --longoptions=$LONGOPTS --name "$0" -- "$@")
[[ ${PIPESTATUS[0]} -ne 0 ]] && error
eval set -- "$PARSED"
while true; do
    case "$1" in
        --conf)       CONF="$2";      shift ;;
        --ip)         SET_IP="$2";    shift ;;
        --dhcp)       DHCP="$2";      shift ;;
        --forward)    FWD_IF="$2";    shift ;;
        --no-forward) NO_FWD="true"         ;;
        --help)       echo "$USAGE"; exit 0 ;;
        --)           shift; break ;;
        *)            error ;;
    esac
    shift
done
[ $# -ne 0 ] && error

# Try to get interface from hostapd.conf
if [ ! -z "$CONF" ]; then
    INTERFACE=$(sed -ne 's/^interface=\(.*\)/\1/p' "$CONF")
fi

check_interface "$INTERFACE"

if [ ! -z "$SET_IP" ]; then
    echo "Configuring IP"
    dhcpcd --release "$INTERFACE" 2>/dev/null
    ip addr flush dev "$INTERFACE"
    ip addr add "$SET_IP/24" dev "$INTERFACE"
fi

KILL_DNSMASQ='killall --quiet --wait dnsmasq || true'
case "$DHCP" in
    yes)
        eval $KILL_DNSMASQ
        echo "Starting DHCP server dnsmasq"
        IP=$(ip address show "$INTERFACE" | sed -ne 's/.*inet \([^\/]*\).*/\1/p')
        if [ $(echo -n "$IP" | grep -c '') != "1" ]; then
            echo "ERROR: $INTERFACE has not exactly one IP address (try --ip)" >&2
            exit 1
        fi
        RANGE="${IP%.*}.100,${IP%.*}.200"
        dnsmasq -C "" --interface "$INTERFACE" --dhcp-range "$RANGE"
        ;;
    no)
        eval $KILL_DNSMASQ
        ;;
    ignore)
        ;;
    *)
        error "invalid value for --dhcp: $DHCP"
        ;;
esac

if [ ! -z "$FWD_IF" ]; then
    echo "Enabling traffic forwarding"
    echo 1 > /proc/sys/net/ipv4/ip_forward
    RULE="POSTROUTING -o $FWD_IF -j MASQUERADE"
    iptables -t nat -C $RULE || iptables -t nat -A $RULE
fi

if [ "$NO_FWD" = "true" ]; then
    echo "Disabling traffic forwarding"
    echo 0 > /proc/sys/net/ipv4/ip_forward
    iptables -t nat -F POSTROUTING
fi

if [ ! -z "$CONF" ]; then
    echo "Starting hostapd"
    killall --quiet --wait hostapd wpa_supplicant || true
    hostapd -B "$CONF" >/dev/null
fi

echo "Success"
