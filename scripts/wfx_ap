#!/bin/bash
# Copyright (c) 2018, Silicon Laboratories
# See license terms contained in COPYING file

set -euo pipefail
. wfx_set_env
check_root

USAGE="Usage: $(basename $0) OPTION

Start in access point mode

Options:
  --help           display this message
  --conf <file>    hostapd.conf file
  --ip <address>   set the IP (with /24 mask)
  --dhcp           start a DHCP server
  --forward <if>   enable traffic forwarding to interface
"

error(){
    echo -e "ERROR\n$USAGE" >&2 && exit 1
}

CONF=""
SET_IP=""
DHCP=""
FWD_IF=""
INTERFACE="wlan0"

[ $# -eq 0 ] && error
LONGOPTS="help,conf:,ip:,dhcp,forward:"
! PARSED=$(getopt --options="" --longoptions=$LONGOPTS --name "$0" -- "$@")
[[ ${PIPESTATUS[0]} -ne 0 ]] && error
eval set -- "$PARSED"
while true; do
    case "$1" in
        --conf)      CONF="$2";      shift ;;
        --ip)        SET_IP="$2";    shift ;;
        --dhcp)      DHCP="true"           ;;
        --forward)   FWD_IF="$2";    shift ;;
        --help)      echo "$USAGE";  exit 0 ;;
        --)          shift; break ;;
        *)           error ;;
    esac
    shift
done
[ $# -ne 0 ] && error

set -x

# Try to get interface from hostapd.conf
if [ ! -z "$CONF" ]; then
    INTERFACE=$(sed -ne 's/^interface=\(.*\)/\1/p' "$CONF")
fi

check_interface "$INTERFACE"

if [ ! -z "$SET_IP" ]; then
    echo "Configuring IP"
    dhcpcd --release "$INTERFACE" 2>/dev/null
    ip addr flush dev "$INTERFACE"
    ip addr add "$SET_IP/24" dev "$INTERFACE"
fi

if [ "$DHCP" = "true" ]; then
    echo "Starting DHCP server dnsmasq"
    killall --quiet --wait dnsmasq || true

    IP=$(ip address show "$INTERFACE" | sed -ne 's/.*inet \([^\/]*\).*/\1/p')
    if [ $(echo -n "$IP" | grep -c '') != "1" ]; then
        echo "ERROR: $INTERFACE has not exactly one IP address" >&2
        exit 1
    fi

    RANGE="${IP%.*}.100,${IP%.*}.200"
    dnsmasq -C "" --interface "$INTERFACE" --dhcp-range "$RANGE"
fi

if [ ! -z "$CONF" ]; then
    echo "Starting hostapd"
    killall --quiet --wait hostapd wpa_supplicant || true
    hostapd -B "$CONF"
fi

if [ ! -z "$FWD_IF" ]; then
    echo "Enabling traffic forwarding"
    echo 1 > /proc/sys/net/ipv4/ip_forward
    iptables -t nat -A POSTROUTING -o "$FWD_IF" -j MASQUERADE
fi

echo "Success"
